{"version":3,"sources":["Components/Toast.js","Components/CustomModal.js","Components/CustomSelect.js","Components/CustomInput.js","Components/CustomCheckbox.js","Tabs/Options.js","assets/le.png","Components/HintComponent.js","Tabs/Certificates.js","Tabs/WhiteList.js","Components/CustomButtonUpload.js","Tabs/Background.js","Tabs/Additionally.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","close","Toast","message","onClose","classes","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","ContentProps","id","I18n","t","action","IconButton","aria-label","color","className","onClick","defaultProps","CustomModal","children","titleButton","titleButton2","buttonClick","Dialog","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","Button","variant","autoFocus","CustomSelect","table","value","title","attr","options","style","native","onChange","noTranslate","themeType","FormControl","clsx","input","controlElement","Object","assign","paddingTop","Select","e","target","renderValue","_item","item","find","it","src","icon","Input","name","map","MenuItem","backgroundColor","Utils","getInvertedColor","undefined","FormHelperText","withStyles","minWidth","inputNumber","width","height","marginRight","CustomInput","styleComponentBlock","component","size","type","TextField","error","helperText","heightInput","margin","marginTop","CustomCheckbox","checked","disabled","socketio","FormControlLabel","control","Checkbox","el","label","Options","props","state","toast","ipAddressOptions","certificatesOptions","usersOptions","socketioOptions","openModal","loaded","confirmSocketIO","this","instance","socket","host","common","getAdapterInstances","then","setState","_id","getRawSocket","emit","err","data","IPs4","family","IPs6","hardware","networkInterfaces","eth","hasOwnProperty","num","length","push","address","i","getCertificates","list","getUsers","prevProps","auth","secure","defaultUser","whiteListSettings","default","user","confirmValue","onLoad","LinearProgress","newCommon","JSON","parse","stringify","extIcon","tab","renderConfirmDialog","blockWarningContent","onError","text","errorText","column","columnSettings","ipInputStyle","blockWrapperCheckbox","blockWrapper","displayNone","cb","whiteListEnabled","filter","lang","end","replace","Component","display","flexDirection","minHeight","verticalAlign","flexFlow","blockWarning","background","padding","fontSize","alignItems","colorTheme","HintComponent","openLink","useState","setOpen","ClickAwayListener","onClickAway","Tooltip","arrow","placement","interactive","onOpen","Fab","boxShadow","marginLeft","Certificates","readme","logoWidth","alt","logo","window","baseObj","object","read","write","delete","create","file","WhiteList","optionsSelect","miniTableSelect","newObj","copyObj","keys","forEach","keyObj","validateIp","number","newKey","addProperty","keySearch","ip","indexOf","lastIndexOf","test","tableHeadArr","position","warning","TableContainer","overflowX","Paper","Table","maxTable","TableHead","TableRow","TableCell","align","rowSpan","buttonAdd","fontWeight","colSpan","index","TableBody","backgroundTheme","borderBottom","buttonRemove","tableInput","userSelect","elProperty","indexProperty","Boolean","checkBoxStyle","miniTable","top","left","zIndex","card","lineHeight","textAlign","element","indexEl","newTableHeadArr","splice","elhed","ind","button","marginBottom","border","borderRadius","root","spacing","CustomButtonUpload","valueFileUpload","setValueFileUpload","accept","multiple","files","dataTransfer","htmlFor","Background","imgSRC","readFile","arrayBufferView","Uint8Array","blob","Blob","URL","webkitURL","createObjectURL","Date","now","callback","reader","FileReader","onload","result","readAsArrayBuffer","justifyContent","a","uploadFile","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","dropZone","dropZoneActive","imgStyle","fontFamily","transition","outline","maxHeight","Additionally","defaultRedirect","arrayTabName","translate","App","extendedProps","encryptedFields","translations","require","selectedTab","settings","certPublic","certPrivate","toString","updateNativeValue","adapterName","nameTab","palette","primary","AppBar","Tabs","getSelectedTab","selectTab","scrollButtons","Tab","checkDisabledTabs","data-name","isIFrame","tabContentIFrame","tabContent","renderTab","renderError","renderSaveCloseButtons","GenericApp","overflow","location","hostname","match","themeName","getThemeName","console","log","version","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.372eddb3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\n\r\nimport { MdClose as IconClose } from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    close: {\r\n\r\n    }\r\n}));\r\n\r\nconst Toast = ({ message, onClose }) => {\r\n    const classes = useStyles();\r\n    if (!message) {\r\n        return null;\r\n    }\r\n    return <Snackbar\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        open={true}\r\n        autoHideDuration={6000}\r\n        onClose={onClose}\r\n        ContentProps={{'aria-describedby': 'message-id',}}\r\n        message={<span id=\"message-id\">{I18n.t(message)}</span>}\r\n        action={[\r\n            <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={onClose}\r\n            >\r\n                <IconClose />\r\n            </IconButton>,\r\n        ]}\r\n    />;\r\n}\r\n\r\nToast.defaultProps = {\r\n    message: '',\r\n    onClose: () => { }\r\n};\r\n\r\nToast.propTypes = {\r\n    onClose: PropTypes.func,\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Toast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst CustomModal = ({ open, close, children, titleButton, titleButton2, buttonClick }) => {\r\n    return <Dialog\r\n        open={open}\r\n        maxWidth=\"md\"\r\n        onClose={close}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n        <DialogTitle id=\"alert-dialog-title\">{I18n.t('Warning')}</DialogTitle>\r\n        <DialogContent>\r\n            {children}\r\n        </DialogContent>\r\n        <DialogActions>\r\n            {titleButton && <Button variant=\"contained\" onClick={buttonClick}>\r\n                {titleButton}\r\n            </Button>}\r\n            {titleButton2 && <Button variant=\"contained\" onClick={close} color=\"primary\" autoFocus>\r\n                {titleButton2}\r\n            </Button>}\r\n        </DialogActions>\r\n    </Dialog>;\r\n}\r\n\r\nCustomModal.defaultProps = {\r\n    open: false,\r\n    buttonClick: () => { },\r\n    close: () => { }\r\n};\r\n\r\nCustomModal.propTypes = {\r\n    open: PropTypes.bool,\r\n    close: PropTypes.func,\r\n    children: PropTypes.any,\r\n    titleButton: PropTypes.string,\r\n    titleButton2: PropTypes.string,\r\n    buttonClick: PropTypes.func\r\n};\r\n\r\nexport default CustomModal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { FormControl, FormHelperText, Input, MenuItem, Select, withStyles } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Icon from '@iobroker/adapter-react/Components/Icon';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    },\r\n    inputNumber: {\r\n        minWidth: 150\r\n    },\r\n    icon: {\r\n        width: 24,\r\n        height: 24,\r\n        marginRight: 8\r\n    }\r\n});\r\n\r\nconst CustomSelect = ({ table, value, title, attr, options, style, classes, native, onChange, className, noTranslate, themeType }) => {\r\n    return <FormControl\r\n        className={clsx(classes.input, classes.controlElement, className)}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n    >\r\n        <Select\r\n            value={table ? value : native[attr] || '_'}\r\n            onChange={e => {\r\n                if (table) {\r\n                    onChange(e.target.value);\r\n                } else {\r\n                    onChange(attr, e.target.value === '_' ? '' : e.target.value)\r\n                }\r\n            }}\r\n            renderValue={_item => {\r\n                const item = options.find(it => it.value === _item);\r\n                return item ? <>\r\n                    <Icon src={item.icon} className={classes.icon}/>\r\n                    {noTranslate ? item.title : I18n.t(item.title)}\r\n                </> : _item\r\n            }}\r\n            input={<Input name={attr} id={attr + '-helper'} />}\r\n        >\r\n            {options.map(item =>\r\n                <MenuItem key={'key-' + item.value} value={item.value || '_'} style={item.color ? {color: item.color, backgroundColor: Utils.getInvertedColor ? Utils.getInvertedColor(item.color, themeType) : undefined} : {}}>\r\n                    <Icon src={item.icon} className={classes.icon}/>\r\n                    {noTranslate ? item.title : I18n.t(item.title)}\r\n                </MenuItem>)}\r\n        </Select>\r\n        <FormHelperText>{title ? I18n.t(title) : ''}</FormHelperText>\r\n    </FormControl>;\r\n}\r\n\r\nCustomSelect.defaultProps = {\r\n    value: '',\r\n    className: null,\r\n    table: false\r\n};\r\n\r\nCustomSelect.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    noTranslate: PropTypes.bool,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(CustomSelect);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { FormControl, FormHelperText, TextField, withStyles } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    },\r\n    inputNumber: {\r\n        minWidth: 150\r\n    },\r\n    heightInput: {\r\n        height: 30\r\n    }\r\n});\r\n\r\nconst CustomInput = ({ styleComponentBlock, component, size, variant, table, value, title, attr, type, style, classes, native, onChange, className }) => {\r\n    const error = false;\r\n    return <FormControl\r\n        className={clsx(type === 'number' ? classes.inputNumber : classes.input + ' ' + classes.controlElement, className)}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n    >\r\n        <TextField\r\n            error={!!error}\r\n            variant={variant}\r\n            value={table ? value : native[attr]}\r\n            type={type}\r\n            helperText={error || ''}\r\n            style={style}\r\n            className={classes.heightInput}\r\n            onChange={e => {\r\n                if (table) {\r\n                    onChange(e.target.value);\r\n                } else {\r\n                    onChange(attr, e.target.value);\r\n                }\r\n            }}\r\n            margin=\"normal\"\r\n            size={size}\r\n        />\r\n        <div style={styleComponentBlock}>\r\n            <FormHelperText style={{ marginTop: -3 }}>{title ? I18n.t(title) : ''}</FormHelperText>\r\n            {component}\r\n        </div>\r\n    </FormControl>;\r\n}\r\n\r\nCustomInput.defaultProps = {\r\n    value: '',\r\n    type: 'text',\r\n    className: null,\r\n    table: false,\r\n    native: {},\r\n    variant: 'standard',\r\n    size: 'medium',\r\n    component: null,\r\n    styleComponentBlock: null\r\n};\r\n\r\nCustomInput.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string,\r\n    type: PropTypes.string,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    component: PropTypes.object,\r\n    styleComponentBlock: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(CustomInput);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Checkbox, FormControlLabel, withStyles } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    }\r\n});\r\n\r\nconst CustomCheckbox = ({ title, attr, style, classes, native, onChange, className, table, checked, disabled }) => {\r\n    let value = table ? checked : native[attr];\r\n    if (attr === 'whiteListEnabled' && native.socketio) {\r\n        value = false;\r\n    }\r\n\r\n    return <FormControlLabel\r\n        key={attr}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n        className={clsx(classes.controlElement, className)}\r\n        control={\r\n            <Checkbox\r\n                disabled={!!disabled}\r\n                checked={value}\r\n                onChange={el => {\r\n                    if (table) {\r\n                        onChange(el.target.checked);\r\n                    } else {\r\n                        onChange(attr, !native[attr]);\r\n                    }\r\n                }}\r\n                color=\"primary\"\r\n            />\r\n        }\r\n        label={title ? I18n.t(title) : ''}\r\n    />;\r\n}\r\n\r\nCustomCheckbox.defaultProps = {\r\n    table: false,\r\n    className: null\r\n};\r\n\r\nCustomCheckbox.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string.isRequired,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    table: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(CustomCheckbox);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\nimport Security from '@material-ui/icons/Security';\r\n\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Toast from '../Components/Toast';\r\nimport CustomModal from '../Components/CustomModal';\r\nimport CustomSelect from '../Components/CustomSelect';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n    blockWrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginRight: 20,\r\n        '@media screen and (max-width: 360px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    displayNone: {\r\n        display: 'none !important'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    blockWrapperCheckbox: {\r\n        display: 'flex',\r\n        flexFlow: 'wrap'\r\n    },\r\n    ipInputStyle: {\r\n        marginTop: 10,\r\n        width: 900,\r\n        marginRight: 20,\r\n        '@media screen and (max-width: 940px)': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    blockWarning: {\r\n        background: '#2196f3',\r\n        color: '#fff',\r\n        margin: '20px 2px',\r\n        padding: 8,\r\n        fontSize: 20\r\n    },\r\n    blockWarningContent: {\r\n        flexFlow: 'wrap',\r\n        display: 'flex',\r\n        alignItems: 'flex-end'\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: [],\r\n            certificatesOptions: [],\r\n            usersOptions: [],\r\n            socketioOptions: [\r\n                { title: I18n.t('nothing'), value: 'none' },\r\n                { title: I18n.t('built_in'), value: '_' }\r\n            ],\r\n            openModal: false,\r\n            loaded: 0,\r\n            confirmSocketIO: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { instance, socket, common: { host } } = this.props;\r\n        const { socketioOptions } = this.state;\r\n        let loaded = 0;\r\n        socket.getAdapterInstances('socketio')\r\n            .then(state =>\r\n                this.setState({ loaded: ++loaded, socketioOptions: [...socketioOptions, ...state\r\n                        .map(({ _id, common: { name } }) => ({ title: `${name} [${name}.${instance}]`, value: _id }))] }));\r\n\r\n        socket.getRawSocket().emit('getHostByIp', host, (err, data) => {\r\n            if (data) {\r\n                let IPs4 = [{ title: `[IPv4] 0.0.0.0 - ${I18n.t('open_ip')}`, value: '0.0.0.0', family: 'ipv4' }];\r\n                let IPs6 = [{ title: '[IPv6] ::', value: '::', family: 'ipv6' }];\r\n                if (data.native.hardware && data.native.hardware.networkInterfaces) {\r\n                    for (let eth in data.native.hardware.networkInterfaces) {\r\n                        if (!data.native.hardware.networkInterfaces.hasOwnProperty(eth)) {\r\n                            continue;\r\n                        }\r\n                        for (let num = 0; num < data.native.hardware.networkInterfaces[eth].length; num++) {\r\n                            if (data.native.hardware.networkInterfaces[eth][num].family !== 'IPv6') {\r\n                                IPs4.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv4' });\r\n                            } else {\r\n                                IPs6.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv6' });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < IPs6.length; i++) {\r\n                    IPs4.push(IPs6[i]);\r\n                }\r\n                this.setState({ loaded: ++loaded, ipAddressOptions: IPs4 });\r\n            }\r\n        });\r\n\r\n        socket.getCertificates()\r\n            .then(list =>\r\n                this.setState({ loaded: ++loaded,certificatesOptions: list }));\r\n\r\n        socket.getUsers()\r\n            .then(list =>\r\n                this.setState({ loaded: ++loaded, usersOptions: list }));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { native: { auth, secure } } = prevProps;\r\n        const { native: { defaultUser, whiteListSettings }, onChange } = this.props;\r\n\r\n        if (!this.props.native.auth && (auth !== this.props.native.auth)) {\r\n            onChange('whiteListSettings.default.user', defaultUser);\r\n        } else if (whiteListSettings && whiteListSettings.default.user !== 'auth' && (auth !== this.props.native.auth)) {\r\n            onChange('whiteListSettings.default.user', 'auth');\r\n        }\r\n        if (defaultUser !== prevProps.native.defaultUser) {\r\n            onChange('whiteListSettings.default.user', defaultUser);\r\n        }\r\n        if (!this.props.native.secure && this.props.native.auth && !this.state.openModal && ((auth !== this.props.native.auth) || (secure !== this.props.native.secure))) {\r\n            this.setState({ openModal: true });\r\n        }\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        return <Dialog\r\n            open={this.state.confirmSocketIO}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.setState({confirmSocketIO: false})}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{I18n.t('Warning')}</DialogTitle>\r\n            <DialogContent>\r\n                {I18n.t('whitelist_only_with_integrated_socket')}<br/>\r\n                {I18n.t('White list will be disabled. Please confirm.')}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    autoFocus\r\n                    onClick={() => {\r\n                        this.props.onChange('whiteListEnabled', false, () =>\r\n                            this.props.onChange('socketio', this.state.confirmValue, () => this.setState({confirmSocketIO: false})))\r\n                    }}\r\n                >\r\n                    {I18n.t('Ok')}\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={() => this.setState({confirmSocketIO: false})}>\r\n                    {I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    render() {\r\n        const { instance, common, classes, native, onLoad, onChange } = this.props;\r\n        const { certificatesOptions, ipAddressOptions, usersOptions, openModal, toast, socketioOptions, loaded } = this.state;\r\n\r\n        if (loaded < 4) {\r\n            return <LinearProgress />;\r\n        }\r\n\r\n        let newCommon = JSON.parse(JSON.stringify(common));\r\n        newCommon.icon = newCommon.extIcon;\r\n\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            {this.renderConfirmDialog()}\r\n            <CustomModal\r\n                open={ openModal }\r\n                buttonClick={() => {\r\n                    onChange('auth', false);\r\n                    this.setState({ openModal: !openModal });\r\n                    this.setState({ toast: 'Authentication_deactivated' });\r\n                }}\r\n                close={() => this.setState({ openModal: !openModal })}\r\n                titleButton={I18n.t('button_title')}\r\n                titleButton2={I18n.t('button_title2')}>\r\n                <div className={classes.blockWarningContent}><Security style={{ width: 32, height: 32 }} />{I18n.t('modal_title')}</div>\r\n            </CustomModal>\r\n            <Logo\r\n                instance={instance}\r\n                classes={undefined}\r\n                common={newCommon}\r\n                native={native}\r\n                onError={text => this.setState({ errorText: text })}\r\n                onLoad={onLoad}\r\n            />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomSelect\r\n                        title='IP address'\r\n                        attr='bind'\r\n                        noTranslate\r\n                        className={classes.ipInputStyle}\r\n                        options={ipAddressOptions}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                    <CustomInput\r\n                        title='port'\r\n                        attr='port'\r\n                        type='number'\r\n                        style={{ marginTop: 5 }}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className={classes.blockWrapperCheckbox}>\r\n                    <div className={classes.blockWrapper}>\r\n                        <CustomCheckbox\r\n                            title='encryption'\r\n                            attr='secure'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='authentication'\r\n                            attr='auth'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            className={native['auth'] ? null : classes.displayNone}\r\n                            title='basic_authentication'\r\n                            attr='basicAuth'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='cache'\r\n                            attr='cache'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomSelect\r\n                            title='socket'\r\n                            attr='socketio'\r\n                            noTranslate\r\n                            options={ socketioOptions }\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={(attr, value, cb) => {\r\n                                if (value && native.whiteListEnabled) {\r\n                                    this.setState({confirmSocketIO: true, confirmValue: value});\r\n                                } else {\r\n                                    onChange(attr, value, cb);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.blockWrapper}>\r\n                        <div className={`${classes.blockWrapperCheckbox} ${native['secure'] ? null : classes.displayNone}`} >\r\n                            <CustomSelect\r\n                                title='public_certificate'\r\n                                attr='certPublic'\r\n                                noTranslate\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' },\r\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'public').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10, marginRight: 20 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                            <CustomSelect\r\n                                title='private_certificate'\r\n                                attr='certPrivate'\r\n                                noTranslate\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' },\r\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'private').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10, marginRight: 20 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                            <CustomSelect\r\n                                title='chained_certificate'\r\n                                attr='certChained'\r\n                                noTranslate\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' },\r\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'chained').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <CustomSelect\r\n                            className={!native['auth'] ? null : classes.displayNone}\r\n                            title='users'\r\n                            attr='defaultUser'\r\n                            themeType={this.props.themeType}\r\n                            noTranslate\r\n                            options={usersOptions.map(({ _id, common: { name, color, icon } }) => ({\r\n                                title: typeof name === 'object' ? name[this.props.lang] || name.end || _id.replace(/^system\\.user\\./, '') : name,\r\n                                value: _id.replace(/^system\\.user\\./, ''),\r\n                                color,\r\n                                icon\r\n                            }))}\r\n                            style={{ marginTop: 10, width: 300 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomInput\r\n                            className={native['auth'] ? null : classes.displayNone}\r\n                            title='time_out'\r\n                            attr='ttl'\r\n                            type='number'\r\n                            style={{ marginTop: -1, width: 300 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='simple_api'\r\n                            attr='simpleapi'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            className={native['socketio'] === '' ? null : classes.displayNone}\r\n                            title='web_sockets'\r\n                            attr='forceWebSockets'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","export default __webpack_public_path__ + \"static/media/le.eb63b1db.png\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ClickAwayListener, Fab, makeStyles, Tooltip } from '@material-ui/core';\r\n\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles(({ name }) => ({\r\n    colorTheme: {\r\n        color: name === 'dark' ? '#a2a2a2;' : '#c0c0c0',\r\n        backgroundColor: name === 'dark' ? '#ffffff00' : '#ffffff'\r\n    }\r\n}));\r\n\r\nconst HintComponent = ({ children, openLink, style }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    return <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n        <Tooltip\r\n            arrow\r\n            placement=\"top\"\r\n            title={I18n.t(children)}\r\n            interactive\r\n            open={open}\r\n            onOpen={() => setOpen(true)}\r\n        >\r\n            <Fab\r\n                className={classes.colorTheme}\r\n                style={Object.assign({\r\n                    boxShadow: 'none',\r\n                    marginLeft: 10,\r\n                    width: 20,\r\n                    height: 20,\r\n                    minHeight: 20,\r\n                }, style)}\r\n                size=\"small\" aria-label=\"like\"\r\n                onClick={() => {\r\n                    setOpen(!open);\r\n                    openLink();\r\n                }}\r\n            >\r\n                <HelpOutlineOutlinedIcon />\r\n            </Fab>\r\n        </Tooltip>\r\n    </ClickAwayListener>;\r\n}\r\n\r\nHintComponent.propTypes = {\r\n    children: PropTypes.string,\r\n    openLink: PropTypes.func,\r\n    style: PropTypes.object\r\n};\r\n\r\nHintComponent.defaultProps = {\r\n    children: 'link',\r\n    openLink: () => { },\r\n    style: {}\r\n};\r\n\r\nexport default HintComponent;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport logo from '../assets/le.png';\r\n\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport HintComponent from '../Components/HintComponent';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)'\r\n    },\r\n    logoWidth: {\r\n        width: 200\r\n    },\r\n    fontSize: {\r\n        '@media screen and (max-width: 460px)': {\r\n            '& > *': {\r\n                fontSize: '3.2vw',\r\n            }\r\n        }\r\n    }\r\n\r\n});\r\n\r\nclass Certificates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange, common: { readme } } = this.props;\r\n        return <form className={classes.tab}>\r\n            <img className={classes.logoWidth} alt='logo' src={logo} />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='use_certificates'\r\n                        attr='leEnabled'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                    <HintComponent openLink={() =>\r\n                        window.open(`${readme}#lets-encrypt-certificates`, '_blank')} />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='renew_certificates'\r\n                        attr='leUpdate'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leUpdate'] && native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomInput\r\n                        title='domain_name'\r\n                        attr='lePort'\r\n                        type='number'\r\n                        style={{ marginTop: -1 }}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='use_lets'\r\n                        attr='leStaging'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nCertificates.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Certificates);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomSelect from '../Components/CustomSelect';\r\nimport Toast from '../Components/Toast';\r\n\r\nconst styles = ({ name }) => ({\r\n    backgroundTheme: {\r\n        background: name === 'dark' ? '#3e3838' : '#dcdcdc'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top'\r\n    },\r\n    columnSettings: {\r\n        width: '100%',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n        '& td': {\r\n            padding: 2\r\n        }\r\n    },\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n    checkBoxStyle: {\r\n        marginLeft: 0,\r\n        marginRight: 0\r\n    },\r\n    miniTable: {\r\n        display: 'none'\r\n    },\r\n    card: {\r\n        padding: 1,\r\n        margin: '20px 0',\r\n        border: '1px solid',\r\n        borderRadius: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    '@media screen and (max-width: 1700px)': {\r\n        table: {\r\n            '& th': {\r\n                padding: 2\r\n            }\r\n        }\r\n    },\r\n    '@media screen and (max-width: 1280px)': {\r\n        miniTable: {\r\n            display: 'block'\r\n        },\r\n        maxTable: {\r\n            display: 'none'\r\n        },\r\n        table: {\r\n            minWidth: 300\r\n        },\r\n        miniTableSelect: {\r\n            minWidth: 185\r\n        }\r\n    },\r\n    warning: {\r\n        color: '#FF4040',\r\n        fontSize: 18,\r\n        display: 'inline-block'\r\n    }\r\n});\r\n\r\nconst baseObj = {\r\n    user: 'admin',\r\n    object: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        delete: true\r\n    },\r\n    state: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        create: true,\r\n        delete: true\r\n    },\r\n    file: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        create: true,\r\n        delete: true\r\n    }\r\n}\r\nclass WhiteList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            usersOptions: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { socket } = this.props;\r\n        socket.getUsers()\r\n            .then(list =>\r\n                this.setState({ usersOptions: list }));\r\n    }\r\n\r\n    userSelect(el, style) {\r\n        const { classes, native, onChange } = this.props;\r\n        const { usersOptions } = this.state;\r\n        const { whiteListSettings } = native;\r\n        if (el === 'default') {\r\n            return whiteListSettings[el].user;\r\n        }\r\n        const optionsSelect = whiteListSettings.default.user === 'auth' ? [{ title: 'auth', value: 'auth' }] : [];\r\n        return <CustomSelect\r\n            table\r\n            value={whiteListSettings[el].user}\r\n            options={[...optionsSelect, ...usersOptions.map(({ _id, common: { name} }) => ({ title: name, value: _id.replace('system.user.', '') }))]}\r\n            native={native}\r\n            style={style}\r\n            noTranslate\r\n            className={classes.miniTableSelect}\r\n            onChange={e => {\r\n                const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                newObj[el].user = e;\r\n                onChange('whiteListSettings', newObj);\r\n            }}\r\n        />\r\n    }\r\n\r\n    tableInput(el, style) {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        if (el === 'default') {\r\n            return el;\r\n        }\r\n        return <CustomInput\r\n            table\r\n            value={el}\r\n            style={style}\r\n            onChange={(e) => {\r\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                let newObj = {};\r\n                Object.keys(copyObj).forEach(keyObj => {\r\n                    if (keyObj === el) {\r\n                        newObj[e] = copyObj[keyObj];\r\n                    } else {\r\n                        newObj[keyObj] = copyObj[keyObj];\r\n                    }\r\n                });\r\n                if (!this.validateIp(e)) {\r\n                    this.setState({ toast: 'incorrect_ip' });\r\n                } else {\r\n                    onChange('whiteListSettings', newObj);\r\n                }\r\n            }}\r\n        />\r\n    }\r\n\r\n    buttonAdd() {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n\r\n        return <IconButton color=\"primary\" onClick={() => {\r\n            let newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n            let number = 1;\r\n            let newKey = '192.168.0.1';\r\n            const addProperty = () => {\r\n                if (Object.keys(newObj).find(keySearch => keySearch === newKey)) {\r\n                    newKey = `192.168.0.${number}`;\r\n                    number = number + 1;\r\n                    addProperty();\r\n                }\r\n            }\r\n            addProperty();\r\n            newObj = Object.assign({ [newKey]: baseObj }, newObj);\r\n            onChange('whiteListSettings', newObj);\r\n        }}>\r\n            <AddCircleIcon />\r\n        </IconButton>;\r\n    }\r\n\r\n    buttonRemove(el) {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n\r\n        return <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                delete copyObj[el];\r\n                onChange('whiteListSettings', copyObj);\r\n            }}\r\n            style={el === 'default' ? { display: 'none' } : null}\r\n            aria-label=\"delete\"\r\n        >\r\n            <DeleteIcon />\r\n        </IconButton>;\r\n    }\r\n\r\n    validateIp(ip) {\r\n        if (ip.indexOf('*') !== -1 && ip.lastIndexOf('.') > ip.indexOf('*')) {\r\n            return false;\r\n        }\r\n        let expression = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\r\n        return expression.test(ip.replace('*', '111'));\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        const { toast } = this.state;\r\n        const tableHeadArr = ['to_read', 'list', 'write', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete'];\r\n\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div style={{ position: 'relative' }} className={`${classes.column} ${classes.columnSettings}`}>\r\n                <CustomCheckbox\r\n                    title=\"included\"\r\n                    attr=\"whiteListEnabled\"\r\n                    disabled={this.props.native.socketio}\r\n                    native={native}\r\n                    onChange={(attr, value) => onChange(attr, value, () => {\r\n                        if (value && !native.whiteListSettings) {\r\n                            onChange('whiteListSettings', {\r\n                                default: {\r\n                                    user: 'admin',\r\n                                    object: {\r\n                                        read: true,\r\n                                        list: true,\r\n                                        write: true,\r\n                                        delete: true\r\n                                    },\r\n                                    state: {\r\n                                        read: true,\r\n                                        list: true,\r\n                                        write: true,\r\n                                        create: true,\r\n                                        delete: true\r\n                                    },\r\n                                    file: {\r\n                                        read: true,\r\n                                        list: true,\r\n                                        write: true,\r\n                                        create: true,\r\n                                        delete: true\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    })}\r\n                />\r\n                {this.props.native.socketio ? <span className={this.props.classes.warning}>{I18n.t('whitelist_only_with_integrated_socket')}</span> : null}\r\n                {!this.props.native.socketio && whiteListSettings ? <div className={native['whiteListEnabled'] ? null : classes.displayNone}>\r\n                    <TableContainer style={{ overflowX: 'visible' }} component={Paper}>\r\n                        <Table className={`${classes.table} ${classes.maxTable}`} aria-label=\"spanning table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" rowSpan={2}>{this.buttonAdd()}</TableCell>\r\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>IP</TableCell>\r\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>{I18n.t('user')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={4} style={{ fontWeight: 'bold' }}>{I18n.t('object')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('status')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('file')}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    {tableHeadArr.map((el, index) =>\r\n                                        <TableCell key={`${el}_${index}_max`} align=\"center\">{I18n.t(el)}</TableCell>)}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {Object.keys(whiteListSettings).map((el, index) =>\r\n                                    <TableRow key={`${index}_max`}>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.buttonRemove(el)}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.tableInput(el, { marginTop: -1, minWidth: 150, paddingTop: 5 })}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.userSelect(el, { marginTop: -1 })}\r\n                                        </TableCell>\r\n                                        {['object', 'state', 'file'].map((elProperty, indexProperty) => Object.keys(whiteListSettings[el][elProperty]).map((attr, index) =>\r\n                                            <TableCell className={Boolean(indexProperty % 2) ? classes.backgroundTheme : null} style={{ borderBottom: Boolean(indexProperty % 2) ? '1px solid #afafaf' : null }} key={`${elProperty}_${attr}_max`} align=\"center\">\r\n                                                <CustomCheckbox\r\n                                                    table\r\n                                                    checked={whiteListSettings[el][elProperty][attr]}\r\n                                                    attr={attr}\r\n                                                    native={native}\r\n                                                    className={classes.checkBoxStyle}\r\n                                                    onChange={(e) => {\r\n                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                                                        newObj[el][elProperty][attr] = e;\r\n                                                        onChange('whiteListSettings', newObj);\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>))}\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <div className={classes.miniTable}>\r\n                            <div className={classes.backgroundTheme} style={{ position: 'sticky', top: -10, left: 12, zIndex: 22, borderBottom: '1px solid' }}>\r\n                                {this.buttonAdd()}\r\n                            </div>\r\n                            <div>\r\n                                {Object.keys(whiteListSettings).map((el, index) => {\r\n                                    return <div\r\n                                        key={`${index}_wrapper`}\r\n                                        className={`${classes.card} ${Boolean(index % 2) ? classes.backgroundTheme : null}`}\r\n                                    >\r\n                                        <div style={{ width: '100%', lineHeight: '30px', textAlign: 'center' }}>\r\n                                            <span>{this.buttonRemove(el)}</span>\r\n                                            <span style={{ marginLeft: 10 }}>IP: {this.tableInput(el, { marginTop: -5, minWidth: 150, marginLeft: 5, verticalAlign: 'middle' })}</span>\r\n                                            <span style={{ marginLeft: 20 }}>{I18n.t('user')}: {this.userSelect(el, { marginTop: -10, marginLeft: 5, verticalAlign: 'middle' })}</span>\r\n                                        </div>\r\n                                        {['object', 'state', 'file'].map((element, indexEl) => {\r\n                                            let newTableHeadArr = [...tableHeadArr].splice(indexEl === 0 ? 0 : 4, indexEl === 0 ? 4 : 5)\r\n                                            return <Table key={`${indexEl}_mini`} className={classes.table} style={{ width: 'inherit' }} aria-label=\"spanning table\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell style={{ background: '#bbbbbb' }} align=\"center\" colSpan={Object.keys(whiteListSettings[el][element]).length}>\r\n                                                            {I18n.t(['object', 'status', 'file'][indexEl])}</TableCell>\r\n                                                    </TableRow>\r\n                                                    <TableRow>\r\n                                                        {newTableHeadArr.map((elhed, ind) => <TableCell key={`${elhed}_${ind}_mini`} align=\"center\">\r\n                                                            {I18n.t(elhed)}</TableCell>)}\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    <TableRow>\r\n                                                        {Object.keys(whiteListSettings[el][element]).map((attr) =>\r\n                                                            <TableCell key={`${element}_${attr}_mini_check`} align=\"center\">\r\n                                                                <CustomCheckbox\r\n                                                                    table\r\n                                                                    checked={whiteListSettings[el][element][attr]}\r\n                                                                    attr={attr}\r\n                                                                    native={native}\r\n                                                                    className={classes.checkBoxStyle}\r\n                                                                    onChange={(e) => {\r\n                                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                                                                        newObj[el][element][attr] = e;\r\n                                                                        onChange('whiteListSettings', newObj);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </TableCell>)}\r\n                                                    </TableRow>\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        })}</div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </TableContainer>\r\n                </div> : null}\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nWhiteList.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WhiteList);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst CustomButtonUpload = ({ title, onChange }) => {\r\n    const classes = useStyles();\r\n    const [valueFileUpload, setValueFileUpload] = useState('');\r\n    return <div className={classes.root}>\r\n        <input\r\n            accept=\"image/*\"\r\n            className={classes.input || ''}\r\n            id=\"contained-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n                onChange(e.target.files[0] || e.dataTransfer.files[0], name =>\r\n                    setValueFileUpload(name));\r\n            }}\r\n        />\r\n        <label htmlFor=\"contained-button-file\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                {I18n.t(title)}\r\n            </Button>\r\n            <TextField style={{ marginLeft: 20 }} value={valueFileUpload} />\r\n        </label>\r\n    </div>;\r\n}\r\n\r\nexport default CustomButtonUpload;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Toast from '../Components/Toast';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomButtonUpload from '../Components/CustomButtonUpload';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    dropZone: {\r\n        marginTop: 30,\r\n        width: 600,\r\n        border: '2px dashed #bbb',\r\n        borderRadius: 5,\r\n        padding: 25,\r\n        textAlign: 'center',\r\n        fontSize: '20pt',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Arial',\r\n        color: '#bbb',\r\n        minWidth: 320,\r\n        minHeight: 200,\r\n        transition: 'background 1s',\r\n        '&:focus': {\r\n            outline: 'inherit'\r\n        }\r\n    },\r\n    dropZoneActive: {\r\n        background: '#d6d6d69c'\r\n    },\r\n    imgStyle: {\r\n        maxWidth: 500,\r\n        maxHeight: 500\r\n    },\r\n    '@media screen and (max-width: 680px)': {\r\n        dropZone: {\r\n            width: 'calc(100% - 45px)',\r\n            minWidth: 200,\r\n        },\r\n        imgStyle: {\r\n            width: '100%',\r\n        }\r\n    }\r\n});\r\n\r\nclass Background extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imgSRC: '',\r\n            toast: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readFile();\r\n    }\r\n\r\n    readFile() {\r\n        const { socket, instance } = this.props;\r\n\r\n        socket.getRawSocket().emit('readFile', `web.${instance}`, 'login-bg.png', (err, data) => {\r\n            if (!err && data) {\r\n                let arrayBufferView = new Uint8Array(data);\r\n                if (!arrayBufferView.length) {\r\n                    this.setState({ imgSRC: `../../files/web.${instance}/login-bg.png?ts=` + Date.now() });\r\n                } else {\r\n                    let blob = new Blob([arrayBufferView], { type: 'image/png' });\r\n                    let urlCreator = window.URL || window.webkitURL;\r\n                    let imgSRC = urlCreator.createObjectURL(blob);\r\n                    this.setState({ imgSRC });\r\n                }\r\n            } else {\r\n                this.setState({ imgSRC: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    uploadFile(file, callback) {\r\n        const { socket, instance } = this.props;\r\n        if (!file) return;\r\n        if (file.size > 5 * 1024 * 1024) {\r\n            this.setState({ toast: `File ${file.name} is too big. Maximum 5MB` });\r\n            this.setState({ imgSRC: '' });\r\n            callback && callback('');\r\n            return;\r\n        }\r\n        let reader = new FileReader();\r\n        reader.onload = ({ target: { result } }) => {\r\n            socket.getRawSocket().emit('writeFile', `web.${instance}`, 'login-bg.png', result, () => {\r\n                this.readFile();\r\n            });\r\n        };\r\n        callback && callback(file.name);\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        const { imgSRC, toast } = this.state;\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomInput\r\n                        styleComponentBlock={{ height: 20, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n                        component={<CustomInput\r\n                            attr='loginBackgroundColorHelper'\r\n                            type='color'\r\n                            style={{ marginTop: -1, marginLeft: 10, minWidth: 60 }}\r\n                            native={native}\r\n                            onChange={async (e, value) => {\r\n                                await onChange('loginBackgroundColorHelper', value);\r\n                                await onChange('loginBackgroundColor', value);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                        />}\r\n                        title='color'\r\n                        attr='loginBackgroundColor'\r\n                        style={{ marginTop: -1, marginBottom: 20 }}\r\n                        native={native}\r\n                        onChange={async (e, value) => {\r\n                            await onChange('loginBackgroundColorHelper', value);\r\n                            await onChange('loginBackgroundColor', value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='background_image'\r\n                        attr='loginBackgroundImage'\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['loginBackgroundImage'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <div>\r\n                        <CustomButtonUpload\r\n                            title=\"upload_image\"\r\n                            attr=\"files\"\r\n                            native={native}\r\n                            onChange={(e, callback) => this.uploadFile(e, callback)}\r\n                        />\r\n                    </div>\r\n                    <Dropzone\r\n                        accept=\"image/*\"\r\n                        onDrop={acceptedFiles => this.uploadFile(acceptedFiles[0])}>\r\n                        {({ getRootProps, getInputProps, isDragActive }) => (\r\n                            <section>\r\n                                <div\r\n                                    className={`${classes.dropZone} ${isDragActive ? classes.dropZoneActive : null}`}\r\n                                    {...getRootProps()}>\r\n                                    <input {...getInputProps()}/>\r\n                                    <p>{I18n.t('place_the_files_here')}</p>\r\n                                    {imgSRC ? <img className={classes.imgStyle} src={imgSRC} alt=\"img\" /> : null}\r\n                                </div>\r\n                            </section>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nBackground.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Background);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)'\r\n    },\r\n    fontSize: {\r\n        '@media screen and (max-width: 460px)': {\r\n            '& > *': {\r\n                fontSize: '3.2vw',\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nclass Additionally extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        return <form className={classes.tab}>\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <h4>\r\n                {I18n.t('disable_default')}\r\n                </h4>\r\n                <p>\r\n                {I18n.t('warning_incorrectly')}\r\n                </p>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='disable_extensions'\r\n                        attr='disableExtensions'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='disable_states'\r\n                        attr='disableStates'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='disable_files'\r\n                        attr='disableFilesObjects'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <h4>\r\n                    {I18n.t('Redirect options')}\r\n                </h4>\r\n                <div>\r\n                    <TextField\r\n                        value={native.defaultRedirect || ''}\r\n                        onChange={async e => await onChange('defaultRedirect', e.target.value)}\r\n                        label={I18n.t('defaultRedirect')}\r\n                        helperText={I18n.t('This path will be opened if no path specified')}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nAdditionally.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Additionally);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Options from './Tabs/Options';\r\nimport Certificates from './Tabs/Certificates';\r\nimport WhiteList from './Tabs/WhiteList';\r\nimport Background from './Tabs/Background';\r\nimport Additionally from './Tabs/Additionally';\r\nimport Toast from './Components/Toast';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nconst arrayTabName = [{\r\n    name: 'options',\r\n    translate: 'main_settings',\r\n    index: 0\r\n}, {\r\n    name: 'certificates',\r\n    translate: 'certificates',\r\n    index: 1\r\n}, {\r\n    name: 'whiteList',\r\n    translate: 'whiteList',\r\n    index: 2\r\n}, {\r\n    name: 'additionally',\r\n    translate: 'additionally',\r\n    index: 3\r\n}, {\r\n    name: 'background',\r\n    translate: 'background',\r\n    index: 4\r\n}]\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const { selectedTab } = this.state;\r\n        const tab = selectedTab;\r\n        if (tab) {\r\n            return arrayTabName.find((el) => el.name === tab)?.index || 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(settings) {\r\n        super.onPrepareSave(settings);\r\n        const { secure, certPublic, certPrivate } = this.state.native;\r\n\r\n        if (secure && (!certPrivate || !certPublic)) {\r\n            this.setState({ toast: 'set_certificates' });\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    renderTab() {\r\n        const { selectedTab, native } = this.state;\r\n        switch (selectedTab) {\r\n            case 'options':\r\n            default:\r\n                return <Options\r\n                    key=\"options\"\r\n                    themeType={this.state.themeType}\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'certificates':\r\n                return <Certificates\r\n                    key=\"certificates\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'whiteList':\r\n                return <WhiteList\r\n                    key=\"whiteList\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'additionally':\r\n                return <Additionally\r\n                    key=\"additionally\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'background':\r\n                return <Background\r\n                    key=\"background\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n        }\r\n    }\r\n\r\n    checkDisabledTabs(nameTab) {\r\n        const { native } = this.state;\r\n        return (!native['auth'] && nameTab === 'background') ||\r\n            (!native['secure'] && nameTab === 'certificates') ||\r\n            (!native['auth'] && nameTab === 'whiteList');\r\n    }\r\n\r\n    render() {\r\n        const { loaded, theme, themeType, toast } = this.state;\r\n        const { classes } = this.props;\r\n        if (!loaded) {\r\n            return <MuiThemeProvider theme={theme}>\r\n                <Loader theme={themeType} />\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={theme}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div className=\"App\" style={{ background: theme.palette.background.default, color: theme.palette.text.primary }}>\r\n                <AppBar position=\"static\">\r\n                    <Tabs\r\n                        value={this.getSelectedTab()}\r\n                        onChange={(e, index) => {\r\n                            this.selectTab(arrayTabName.find((el) => el.index === index)?.name || arrayTabName[0].name, index)\r\n                        }} scrollButtons=\"auto\"\r\n                    >\r\n                        {arrayTabName.map((el, index) =>\r\n                            <Tab key={`${index}-tab-key`} disabled={this.checkDisabledTabs(el.name)} label={I18n.t(el.translate)} data-name={el.name} />)}\r\n                    </Tabs>\r\n                </AppBar>\r\n                <div className={this.isIFrame ? classes.tabContentIFrame : classes.tabContent}>\r\n                    {this.renderTab()}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'web';\r\nlet themeName = Utils.getThemeName();\r\n\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}