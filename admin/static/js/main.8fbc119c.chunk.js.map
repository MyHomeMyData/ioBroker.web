{"version":3,"sources":["Components/CustomSelect.js","Components/CustomInput.js","Components/CustomCheckbox.js","Components/CustomModal.js","Components/Toast.js","Tabs/Options.js","Components/HintComponent.js","assets/le.png","Tabs/Certificates.js","Tabs/WhiteList.js","Components/CustomButtonUpload.js","Tabs/Background.js","Tabs/Additionally.js","App.js","serviceWorker.js","index.js"],"names":["CustomSelect","table","value","title","attr","options","style","classes","native","onChange","className","FormControl","clsx","input","controlElement","Object","assign","paddingTop","Select","e","target","Input","name","id","map","item","MenuItem","I18n","t","FormHelperText","defaultProps","withStyles","theme","minWidth","inputNumber","CustomInput","styleComponentBlock","component","size","variant","type","TextField","error","helperText","heightInput","margin","marginTop","height","CustomCheckbox","checked","FormControlLabel","control","Checkbox","el","color","label","useStyles","makeStyles","modalContentWrapper","padding","overflowX","modalButtonBlock","display","justifyContent","flexFlow","borderTop","modalButtonBlockTwo","modalWrapper","position","background","close","right","top","width","opacity","cursor","transition","transform","left","content","backgroundColor","CustomModal","open","children","titleButton","titleButton2","buttonClick","Dialog","maxWidth","disableEscapeKeyDown","onClose","aria-labelledby","aria-describedby","onClick","Button","Toast","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","action","IconButton","aria-label","Options","props","state","toast","ipAddressOptions","certificatesOptions","usersOptions","socketioOptions","openModal","this","instance","socket","host","common","getAdapterInstances","then","setState","_id","getRawSocket","emit","err","data","IPs4","family","IPs6","hardware","networkInterfaces","eth","hasOwnProperty","num","length","push","address","i","getCertificates","list","getUsers","prevProps","auth","secure","defaultUser","whiteListSettings","default","user","onLoad","newCommon","JSON","parse","stringify","icon","extIcon","tab","blockWarning","blockWarningContent","undefined","onError","text","errorText","column","columnSettings","ipInputStyle","blockWrapperCheckbox","blockWrapper","displayNone","filter","marginRight","replace","Component","flexDirection","minHeight","verticalAlign","fontSize","marginBottom","alignItems","colorTheme","HintComponent","openLink","useState","setOpen","ClickAwayListener","onClickAway","Tooltip","arrow","placement","interactive","onOpen","Fab","boxShadow","marginLeft","Certificates","readme","logoWidth","alt","src","logo","window","baseObj","object","read","write","delete","create","file","WhiteList","optionsSelect","miniTableSelect","newObj","copyObj","keys","forEach","keyObj","validateIp","number","newKey","addProperty","find","keySearch","ip","indexOf","lastIndexOf","test","tableHeadArr","TableContainer","Paper","Table","maxTable","TableHead","TableRow","TableCell","align","rowSpan","buttonAdd","fontWeight","colSpan","index","TableBody","backgroundTheme","borderBottom","buttonRemove","tableInput","tableSelect","elProperty","indexProperty","Boolean","checkBoxStyle","miniTable","zIndex","card","lineHeight","textAlign","element","indexEl","newTableHeadArr","splice","elhed","ind","button","border","borderRadius","root","spacing","CustomButtonUpload","valueFileUpload","setValueFileUpload","accept","multiple","files","dataTransfer","htmlFor","Background","imgSRC","readFile","arrayBufferView","Uint8Array","blob","Blob","URL","webkitURL","createObjectURL","Date","now","callback","reader","FileReader","onload","result","readAsArrayBuffer","a","uploadFile","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","dropZone","dropZoneActive","imgStyle","fontFamily","outline","maxHeight","Additionally","arrayTabName","translate","App","extendedProps","encryptedFields","translations","require","selectedTab","settings","certPublic","certPrivate","toString","updateNativeValue","adapterName","nameTab","loaded","themeType","palette","primary","AppBar","Tabs","getSelectedTab","selectTab","scrollButtons","Tab","disabled","checkDisabledTabs","data-name","isIFrame","tabContentIFrame","tabContent","renderTab","renderError","renderSaveCloseButtons","GenericApp","overflow","location","hostname","match","themeName","Utils","getThemeName","console","log","version","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fbc119c.chunk.js","sourcesContent":["import { FormControl, FormHelperText, Input, MenuItem, Select, withStyles } from '@material-ui/core';\nimport React from 'react';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst styles = theme => ({\n    input: {\n        minWidth: 300\n    },\n    inputNumber: {\n        minWidth: 150\n    }\n});\n\nconst CustomSelect = ({ table, value, title, attr, options, style, classes, native, onChange, className }) => {\n    return <FormControl\n        className={clsx(classes.input, classes.controlElement, className)}\n        style={Object.assign({ paddingTop: 5 }, style)}\n    >\n        <Select\n            value={table ? value : native[attr] || '_'}\n            onChange={e => {\n                if (table) {\n                    onChange(e.target.value);\n                } else {\n                    onChange(attr, e.target.value === '_' ? '' : e.target.value)\n                }\n            }\n            }\n            input={<Input name={attr} id={attr + '-helper'} />}\n        >\n            {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\n        </Select>\n        <FormHelperText>{I18n.t(title)}</FormHelperText>\n    </FormControl>;\n}\n\nCustomSelect.defaultProps = {\n    value: '',\n    className: null,\n    table: false\n};\n\nCustomSelect.propTypes = {\n    title: PropTypes.string,\n    attr: PropTypes.string,\n    options: PropTypes.array.isRequired,\n    style: PropTypes.object,\n    native: PropTypes.object.isRequired,\n    onChange: PropTypes.func\n};\n\nexport default withStyles(styles)(CustomSelect);","import { FormControl, FormHelperText, TextField, withStyles } from '@material-ui/core';\nimport React from 'react';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst styles = theme => ({\n    input: {\n        minWidth: 300\n    },\n    inputNumber: {\n        minWidth: 150\n    },\n    heightInput: {\n        height: 30\n    }\n});\n\nconst CustomInput = ({ styleComponentBlock, component, size, variant, table, value, title, attr, type, style, classes, native, onChange, className }) => {\n    const error = false;\n    return <FormControl\n        className={clsx(type === 'number' ? classes.inputNumber : classes.input + ' ' + classes.controlElement, className)}\n        style={Object.assign({ paddingTop: 5 }, style)}\n    >\n        <TextField\n            error={!!error}\n            variant={variant}\n            value={table ? value : native[attr]}\n            type={type}\n            helperText={error || ''}\n            style={style}\n            className={classes.heightInput}\n            onChange={e => {\n                if (table) {\n                    onChange(e.target.value);\n                } else {\n                    onChange(attr, e.target.value);\n                }\n            }}\n            margin=\"normal\"\n            size={size}\n        />\n        <div style={styleComponentBlock}>\n            <FormHelperText style={{ marginTop: -3 }}>{I18n.t(title)}</FormHelperText>\n            {component}\n        </div>\n    </FormControl>;\n}\n\nCustomInput.defaultProps = {\n    value: '',\n    type: 'text',\n    className: null,\n    table: false,\n    native: {},\n    variant: 'standard',\n    size: 'medium',\n    component: null,\n    styleComponentBlock: null\n};\n\nCustomInput.propTypes = {\n    title: PropTypes.string,\n    attr: PropTypes.string,\n    type: PropTypes.string,\n    style: PropTypes.object,\n    native: PropTypes.object,\n    onChange: PropTypes.func,\n    component: PropTypes.object,\n    styleComponentBlock: PropTypes.object\n};\n\nexport default withStyles(styles)(CustomInput);","import { Checkbox, FormControlLabel, withStyles } from '@material-ui/core';\nimport React from 'react';\nimport clsx from 'clsx';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    input: {\n        minWidth: 300\n    }\n});\n\nconst CustomCheckbox = ({ title, attr, style, classes, native, onChange, className, table, checked }) => {\n    return <FormControlLabel\n        key={attr}\n        style={Object.assign({ paddingTop: 5 }, style)}\n        className={clsx(classes.controlElement, className)}\n        control={\n            <Checkbox\n                checked={table ? checked : native[attr]}\n                onChange={el => {\n                    if (table) {\n                        onChange(el.target.checked);\n                    } else {\n                        onChange(attr, !native[attr]);\n                    }\n                }}\n                color=\"primary\"\n            />\n        }\n        label={I18n.t(title)}\n    />;\n}\n\nCustomCheckbox.defaultProps = {\n    table: false,\n    className: null\n};\n\nCustomCheckbox.propTypes = {\n    title: PropTypes.string,\n    attr: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    native: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    table: PropTypes.bool\n};\n\nexport default withStyles(styles)(CustomCheckbox);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Dialog } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    modalContentWrapper: {\n        margin: '20px 0',\n        padding: '0 35px',\n        // background: '#f6f6f6',\n        overflowX: 'hidden',\n        minWidth: '320px'\n    },\n    modalButtonBlock: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: '20px',\n        flexFlow: 'wrap',\n        borderTop: '1px solid silver'\n    },\n    modalButtonBlockTwo: {\n        justifyContent: 'space-around',\n        flexFlow: 'wrap-reverse',\n        '& button': {\n            margin: '5px'\n        }\n    },\n    modalWrapper: {\n        position: 'relative',\n        '[class*=\"MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthXl MuiPaper-elevation24 MuiPaper-rounded\"]': {\n            background: '#f6f6f6'\n        }\n    },\n    close: {\n        position: 'absolute',\n        right: '8px',\n        top: '6px',\n        width: '32px',\n        height: '32px',\n        opacity: '0.9',\n        cursor: 'pointer',\n        transition: 'all 0.6s ease',\n        '&:hover': {\n            transform: 'rotate(90deg)'\n        },\n        '&:before': {\n            position: 'absolute',\n            left: '15px',\n            content: '\"\"',\n            height: '33px',\n            width: '4px',\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(45deg)'\n        },\n        '&:after': {\n            position: 'absolute',\n            left: '15px',\n            content: '\"\"',\n            height: '33px',\n            width: '4px',\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(-45deg)'\n        },\n    },\n    '@media screen and (max-width: 460px)': {\n        modalContentWrapper: {\n            minWidth: 'auto'\n        }\n    }\n\n}));\n\nconst CustomModal = ({ open, close, children, titleButton, titleButton2, buttonClick }) => {\n    const classes = useStyles();\n    return (\n        <Dialog\n            open={open}\n            maxWidth='xl'\n            disableEscapeKeyDown={true}\n            onClose={close}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            className={classes.modalWrapper || ''}\n        >\n            <div className={classes.modalContentWrapper}>\n                <div className={classes.close} onClick={close} />\n                {children}\n                <div className={`${classes.modalButtonBlock} ${titleButton ? classes.modalButtonBlockTwo : ''}`}>\n                    {titleButton && <Button onClick={buttonClick}>\n                        {titleButton}\n                    </Button>}\n                    {titleButton2 && <Button onClick={close}>\n                        {titleButton2}\n                    </Button>}\n                </div>\n            </div>\n        </Dialog>\n    );\n}\n\nCustomModal.defaultProps = {\n    open: false,\n    buttonClick: () => { },\n    close: () => { }\n};\n\nCustomModal.propTypes = {\n    open: PropTypes.bool,\n    close: PropTypes.func,\n    children: PropTypes.any,\n    titleButton: PropTypes.string,\n    titleButton2: PropTypes.string,\n    buttonClick: PropTypes.func\n};\n\nexport default CustomModal;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Snackbar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport { MdClose as IconClose } from 'react-icons/md';\n\nconst useStyles = makeStyles((theme) => ({\n    close: {\n\n    }\n}));\n\nconst Toast = ({ message, onClose }) => {\n    const classes = useStyles();\n    if (!message) {\n        return null;\n    }\n    return <Snackbar\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        open={true}\n        autoHideDuration={6000}\n        onClose={onClose}\n        ContentProps={{'aria-describedby': 'message-id',}}\n        message={<span id=\"message-id\">{I18n.t(message)}</span>}\n        action={[\n            <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={onClose}\n            >\n                <IconClose />\n            </IconButton>,\n        ]}\n    />;\n}\n\nToast.defaultProps = {\n    message: '',\n    onClose: () => { }\n};\n\nToast.propTypes = {\n    onClose: PropTypes.func,\n    message: PropTypes.string\n};\n\nexport default Toast;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport CustomSelect from '../Components/CustomSelect';\nimport CustomInput from '../Components/CustomInput';\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport CustomModal from '../Components/CustomModal';\nimport Security from '@material-ui/icons/Security';\nimport Toast from '../Components/Toast';\n\nconst styles = theme => ({\n    blockWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginRight: 20,\n        '@media screen and (max-width: 360px)': {\n            marginRight: 0\n        }\n    },\n    displayNone: {\n        display: 'none !important'\n    },\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    blockWrapperCheckbox: {\n        display: 'flex',\n        flexFlow: 'wrap'\n    },\n    ipInputStyle: {\n        marginTop: 10,\n        width: 900,\n        marginRight: 20,\n        '@media screen and (max-width: 940px)': {\n            width: '100%'\n        }\n    },\n    blockWarning: {\n        background: '#2196f3',\n        color: '#fff',\n        margin: '20px 2px',\n        padding: 8,\n        fontSize: 20\n    },\n    blockWarningContent: {\n        marginBottom: 200,\n        flexFlow: 'wrap',\n        display: 'flex',\n        alignItems: 'flex-end'\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            ipAddressOptions: [],\n            certificatesOptions: [],\n            usersOptions: [],\n            socketioOptions: [\n                { title: I18n.t('nothing'), value: 'none' },\n                { title: I18n.t('built_in'), value: '' }\n            ],\n            openModal: false\n        };\n    }\n\n    componentDidMount() {\n        const { instance, socket, common: { host } } = this.props;\n        const { socketioOptions } = this.state;\n        socket.getAdapterInstances('socketio').then(state => {\n            this.setState({ socketioOptions: [...socketioOptions, ...state.map(({ _id, common: { name } }) => ({ title: `${name} [${name}.${instance}]`, value: _id }))] })\n        }\n        );\n\n        socket.getRawSocket().emit('getHostByIp', host, (err, data) => {\n            if (data) {\n                let IPs4 = [{ title: `[IPv4] 0.0.0.0 - ${I18n.t('open_ip')}`, value: '0.0.0.0', family: 'ipv4' }];\n                let IPs6 = [{ title: '[IPv6] ::', value: '::', family: 'ipv6' }];\n                if (data.native.hardware && data.native.hardware.networkInterfaces) {\n                    for (let eth in data.native.hardware.networkInterfaces) {\n                        if (!data.native.hardware.networkInterfaces.hasOwnProperty(eth)) {\n                            continue;\n                        }\n                        for (let num = 0; num < data.native.hardware.networkInterfaces[eth].length; num++) {\n                            if (data.native.hardware.networkInterfaces[eth][num].family !== 'IPv6') {\n                                IPs4.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv4' });\n                            } else {\n                                IPs6.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv6' });\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < IPs6.length; i++) {\n                    IPs4.push(IPs6[i]);\n                }\n                this.setState({ ipAddressOptions: IPs4 });\n            }\n        })\n\n        socket.getCertificates()\n            .then(list =>\n                this.setState({ certificatesOptions: list }));\n\n        socket.getUsers()\n            .then(list =>\n                this.setState({ usersOptions: list }));\n    }\n\n    componentDidUpdate(prevProps) {\n        const { native: { auth, secure } } = prevProps;\n        const { native: { defaultUser, whiteListSettings }, onChange } = this.props;\n        if (!this.props.native.auth && (auth !== this.props.native.auth)) {\n            onChange('whiteListSettings.default.user', defaultUser);\n        } else if (whiteListSettings && whiteListSettings.default.user !== 'auth' && (auth !== this.props.native.auth)) {\n            onChange('whiteListSettings.default.user', 'auth');\n        }\n        if (defaultUser !== prevProps.native.defaultUser) {\n            onChange('whiteListSettings.default.user', defaultUser);\n        }\n        if (!this.props.native.secure && this.props.native.auth && !this.state.openModal && ((auth !== this.props.native.auth) || (secure !== this.props.native.secure))) {\n            this.setState({ openModal: true });\n        }\n    }\n\n    render() {\n        const { instance, common, classes, native, onLoad, onChange } = this.props;\n        const { certificatesOptions, ipAddressOptions, usersOptions, openModal, toast, socketioOptions } = this.state;\n        let newCommon = JSON.parse(JSON.stringify(common));\n        newCommon.icon = newCommon.extIcon;\n        return <form className={classes.tab}>\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n            <CustomModal\n                open={openModal}\n                buttonClick={() => {\n                    onChange('auth', false);\n                    this.setState({ openModal: !openModal });\n                    this.setState({ toast: 'Authentication_deactivated' });\n                }}\n                close={() => this.setState({ openModal: !openModal })}\n                titleButton={I18n.t('button_title')}\n                titleButton2={I18n.t('button_title2')}>\n                <div className={classes.blockWarning}>{I18n.t('Warning')}</div>\n                <div className={classes.blockWarningContent}><Security style={{ width: 100, height: 100 }} />{I18n.t('modal_title')}</div>\n            </CustomModal>\n            <Logo\n                instance={instance}\n                classes={undefined}\n                common={newCommon}\n                native={native}\n                onError={text => this.setState({ errorText: text })}\n                onLoad={onLoad}\n            />\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomSelect\n                        title='ip'\n                        attr='bind'\n                        className={classes.ipInputStyle}\n                        options={ipAddressOptions}\n                        native={native}\n                        onChange={onChange}\n                    />\n                    <CustomInput\n                        title='port'\n                        attr='port'\n                        type='number'\n                        style={{ marginTop: 5 }}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className={classes.blockWrapperCheckbox}>\n                    <div className={classes.blockWrapper}>\n                        <CustomCheckbox\n                            title='encryption'\n                            attr='secure'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            title='authentication'\n                            attr='auth'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            className={native['auth'] ? null : classes.displayNone}\n                            title='basic_authentication'\n                            attr='basicAuth'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            title='cache'\n                            attr='cache'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomSelect\n                            title='socket'\n                            attr='socketio'\n                            options={socketioOptions}\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className={classes.blockWrapper}>\n                        <div className={`${classes.blockWrapperCheckbox} ${native['secure'] ? null : classes.displayNone}`} >\n                            <CustomSelect\n                                title='public_certificate'\n                                attr='certPublic'\n                                options={[\n                                    { title: I18n.t('nothing'), value: '' }, ...certificatesOptions.filter(({ type }) => type === 'public').map(({ name }) => ({ title: name, value: name }))\n                                ]}\n                                style={{ marginTop: 10, marginRight: 20 }}\n                                native={native}\n                                onChange={onChange}\n                            />\n                            <CustomSelect\n                                title='private_certificate'\n                                attr='certPrivate'\n                                options={[\n                                    { title: I18n.t('nothing'), value: '' }, ...certificatesOptions.filter(({ type }) => type === 'private').map(({ name }) => ({ title: name, value: name }))\n                                ]}\n                                style={{ marginTop: 10, marginRight: 20 }}\n                                native={native}\n                                onChange={onChange}\n                            />\n                            <CustomSelect\n                                title='chained_certificate'\n                                attr='certChained'\n                                options={[\n                                    { title: I18n.t('nothing'), value: '' }, ...certificatesOptions.filter(({ type }) => type === 'chained').map(({ name }) => ({ title: name, value: name }))\n                                ]}\n                                style={{ marginTop: 10 }}\n                                native={native}\n                                onChange={onChange}\n                            />\n                        </div>\n                        <CustomSelect\n                            className={!native['auth'] ? null : classes.displayNone}\n                            title='users'\n                            attr='defaultUser'\n                            options={usersOptions.map(({ _id, common: { name } }) => ({ title: name, value: _id.replace('system.user.', '') }))}\n                            style={{ marginTop: 10, width: 300 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomInput\n                            className={native['auth'] ? null : classes.displayNone}\n                            title='time_out'\n                            attr='ttl'\n                            type='number'\n                            style={{ marginTop: -1, width: 300 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            title='simple_api'\n                            attr='simpleapi'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            className={native['socketio'] === '' ? null : classes.displayNone}\n                            title='web_sockets'\n                            attr='forceWebSockets'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ClickAwayListener, Fab, makeStyles, Tooltip } from '@material-ui/core';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst useStyles = makeStyles(({ name }) => ({\n    colorTheme: {\n        color: name === 'dark' ? '#a2a2a2;' : '#c0c0c0',\n        backgroundColor: name === 'dark' ? '#ffffff00' : '#ffffff'\n    }\n}));\n\nconst HintComponent = ({ children, openLink, style }) => {\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n    return (\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <Tooltip\n                arrow\n                placement=\"top\"\n                title={I18n.t(children)}\n                interactive\n                open={open}\n                onOpen={() => setOpen(true)}\n            >\n                <Fab\n                    className={classes.colorTheme}\n                    style={Object.assign({\n                        boxShadow: 'none',\n                        marginLeft: 10,\n                        width: 20,\n                        height: 20,\n                        minHeight: 20,\n                    }, style)}\n                    size=\"small\" aria-label=\"like\"\n                    onClick={() => {\n                        setOpen(!open);\n                        openLink();\n                    }}\n                >\n                    <HelpOutlineOutlinedIcon />\n                </Fab>\n            </Tooltip>\n        </ClickAwayListener>\n    )\n}\n\nHintComponent.propTypes = {\n    children: PropTypes.string,\n    openLink: PropTypes.func,\n    style: PropTypes.object\n};\n\nHintComponent.defaultProps = {\n    children: 'link',\n    openLink: () => { },\n    style: {}\n};\n\nexport default HintComponent;","export default __webpack_public_path__ + \"static/media/le.eb63b1db.png\";","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport CustomInput from '../Components/CustomInput';\nimport HintComponent from '../Components/HintComponent';\nimport logo from '../assets/le.png';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)'\n    },\n    logoWidth: {\n        width: 200\n    },\n    fontSize: {\n        '@media screen and (max-width: 460px)': {\n            '& > *': {\n                fontSize: '3.2vw',\n            }\n        }\n    }\n\n});\n\nclass Certificates extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            ipAddressOptions: []\n        };\n    }\n\n    render() {\n        const { classes, native, onChange, common: { readme } } = this.props;\n        return <form className={classes.tab}>\n            <img className={classes.logoWidth} alt='logo' src={logo} />\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomCheckbox\n                        title='use_certificates'\n                        attr='leEnabled'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                    <HintComponent openLink={() =>\n                        window.open(`${readme}#lets-encrypt-certificates`, '_blank')} />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='renew_certificates'\n                        attr='leUpdate'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leUpdate'] && native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomInput\n                        title='domain_name'\n                        attr='lePort'\n                        type='number'\n                        style={{ marginTop: -1 }}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='use_lets'\n                        attr='leStaging'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nCertificates.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Certificates);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport CustomInput from '../Components/CustomInput';\nimport CustomSelect from '../Components/CustomSelect';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Toast from '../Components/Toast';\n\nconst styles = ({ name }) => ({\n    backgroundTheme: {\n        background: name === 'dark' ? '#3e3838' : '#dcdcdc'\n    },\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top'\n    },\n    columnSettings: {\n        width: '100%',\n    },\n    table: {\n        minWidth: 700,\n        '& td': {\n            padding: 2\n        }\n    },\n    displayNone: {\n        display: 'none'\n    },\n    checkBoxStyle: {\n        marginLeft: 0,\n        marginRight: 0\n    },\n    miniTable: {\n        display: 'none'\n    },\n    card: {\n        padding: 1,\n        margin: '20px 0',\n        border: '1px solid',\n        borderRadius: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    '@media screen and (max-width: 1700px)': {\n        table: {\n            '& th': {\n                padding: 2\n            }\n        }\n    },\n    '@media screen and (max-width: 1280px)': {\n        miniTable: {\n            display: 'block'\n        },\n        maxTable: {\n            display: 'none'\n        },\n        table: {\n            minWidth: 300\n        },\n        miniTableSelect: {\n            minWidth: 185\n        }\n    }\n});\n\nconst baseObj = {\n    user: 'admin',\n    object: {\n        read: true,\n        list: true,\n        write: true,\n        delete: true\n    },\n    state: {\n        read: true,\n        list: true,\n        write: true,\n        create: true,\n        delete: true\n    },\n    file: {\n        read: true,\n        list: true,\n        write: true,\n        create: true,\n        delete: true\n    }\n}\nclass WhiteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            usersOptions: []\n        };\n    }\n\n    componentDidMount() {\n        const { socket } = this.props;\n        socket.getUsers()\n            .then(list =>\n                this.setState({ usersOptions: list }));\n    }\n\n    tableSelect(el, style) {\n        const { classes, native, onChange } = this.props;\n        const { usersOptions } = this.state;\n        const { whiteListSettings } = native;\n        if (el === 'default') {\n            return whiteListSettings[el].user;\n        }\n        const optionsSelect = whiteListSettings.default.user === 'auth' ? [{ title: 'auth', value: 'auth' }] : [];\n        return <CustomSelect\n            table\n            value={whiteListSettings[el].user}\n            options={[...optionsSelect, ...usersOptions.map(({ _id, common: { name} }) => ({ title: name, value: _id.replace('system.user.', '') }))]}\n            native={native}\n            style={style}\n            className={classes.miniTableSelect}\n            onChange={(e) => {\n                const newObj = JSON.parse(JSON.stringify(whiteListSettings));\n                newObj[el].user = e;\n                onChange('whiteListSettings', newObj);\n            }}\n        />\n    }\n\n    tableInput(el, style) {\n        const { native, onChange } = this.props;\n        const { whiteListSettings } = native;\n        if (el === 'default') {\n            return el;\n        }\n        return <CustomInput\n            table\n            value={el}\n            style={style}\n            onChange={(e) => {\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\n                let newObj = {};\n                Object.keys(copyObj).forEach(keyObj => {\n                    if (keyObj === el) {\n                        newObj[e] = copyObj[keyObj];\n                    } else {\n                        newObj[keyObj] = copyObj[keyObj];\n                    }\n                });\n                if (!this.validateIp(e)) {\n                    this.setState({ toast: 'incorrect_ip' });\n                } else {\n                    onChange('whiteListSettings', newObj);\n                }\n            }}\n        />\n    }\n\n    buttonAdd() {\n        const { native, onChange } = this.props;\n        const { whiteListSettings } = native;\n        return <IconButton color=\"primary\" onClick={() => {\n            let newObj = JSON.parse(JSON.stringify(whiteListSettings));\n            let number = 1;\n            let newKey = '192.168.0.1';\n            const addProperty = () => {\n                if (Object.keys(newObj).find(keySearch => keySearch === newKey)) {\n                    newKey = `192.168.0.${number}`;\n                    number = number + 1;\n                    addProperty();\n                }\n            }\n            addProperty();\n            newObj = Object.assign({ [newKey]: baseObj }, newObj);\n            onChange('whiteListSettings', newObj);\n        }}>\n            <AddCircleIcon />\n        </IconButton>\n    }\n\n    buttonRemove(el) {\n        const { native, onChange } = this.props;\n        const { whiteListSettings } = native;\n        return <IconButton\n            color=\"primary\"\n            onClick={() => {\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\n                delete copyObj[el];\n                onChange('whiteListSettings', copyObj);\n            }}\n            style={el === 'default' ? { display: 'none' } : null}\n            aria-label=\"delete\"\n        >\n            <DeleteIcon />\n        </IconButton>\n    }\n\n    validateIp(ip) {\n        if (ip.indexOf('*') !== -1 && ip.lastIndexOf('.') > ip.indexOf('*')) {\n            return false;\n        }\n        let expression = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\n        return expression.test(ip.replace('*', '111'));\n    }\n\n    render() {\n        const { classes, native, onChange } = this.props;\n        const { whiteListSettings } = native;\n        const { toast } = this.state;\n        const tableHeadArr = ['to_read', 'list', 'write', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete'];\n        return <form className={classes.tab}>\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n            <div style={{ position: 'relative' }} className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomCheckbox\n                        title='included'\n                        attr='whiteListEnabled'\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                {whiteListSettings ? <div className={native['whiteListEnabled'] ? null : classes.displayNone}>\n                    <TableContainer style={{ overflowX: 'visible' }} component={Paper}>\n                        <Table className={`${classes.table} ${classes.maxTable}`} aria-label=\"spanning table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\" rowSpan={2}>{this.buttonAdd()}</TableCell>\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>IP</TableCell>\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>{I18n.t('user')}</TableCell>\n                                    <TableCell align=\"center\" colSpan={4} style={{ fontWeight: 'bold' }}>{I18n.t('object')}</TableCell>\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('status')}</TableCell>\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('file')}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    {tableHeadArr.map((el, index) =>\n                                        <TableCell key={`${el}_${index}_max`} align=\"center\">{I18n.t(el)}</TableCell>)}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {Object.keys(whiteListSettings).map((el, index) => {\n                                    return <TableRow key={`${index}_max`}>\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\n                                            {this.buttonRemove(el)}\n                                        </TableCell>\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\n                                            {this.tableInput(el, { marginTop: -1, minWidth: 150, paddingTop: 5 })}\n                                        </TableCell>\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\n                                            {this.tableSelect(el, { marginTop: -1 })}\n                                        </TableCell>\n                                        {['object', 'state', 'file'].map((elProperty, indexProperty) => Object.keys(whiteListSettings[el][elProperty]).map((attr, index) =>\n                                            <TableCell className={Boolean(indexProperty % 2) ? classes.backgroundTheme : null} style={{ borderBottom: Boolean(indexProperty % 2) ? '1px solid #afafaf' : null }} key={`${elProperty}_${attr}_max`} align=\"center\">\n                                                <CustomCheckbox\n                                                    table\n                                                    checked={whiteListSettings[el][elProperty][attr]}\n                                                    attr={attr}\n                                                    native={native}\n                                                    className={classes.checkBoxStyle}\n                                                    onChange={(e) => {\n                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\n                                                        newObj[el][elProperty][attr] = e;\n                                                        onChange('whiteListSettings', newObj);\n                                                    }}\n                                                />\n                                            </TableCell>))}\n                                    </TableRow>\n                                })}\n                            </TableBody>\n                        </Table>\n                        <div className={classes.miniTable}>\n                            <div className={classes.backgroundTheme} style={{ position: 'sticky', top: -10, left: 12, zIndex: 22, borderBottom: '1px solid' }}>\n                                {this.buttonAdd()}\n                            </div>\n                            <div>\n                                {Object.keys(whiteListSettings).map((el, index) => {\n                                    return <div\n                                        key={`${index}_wrapper`}\n                                        className={`${classes.card} ${Boolean(index % 2) ? classes.backgroundTheme : null}`}\n                                    >\n                                        <div style={{ width: '100%', lineHeight: '30px', textAlign: 'center' }}>\n                                            <span>{this.buttonRemove(el)}</span>\n                                            <span style={{ marginLeft: 10 }}>IP: {this.tableInput(el, { marginTop: -5, minWidth: 150, marginLeft: 5, verticalAlign: 'middle' })}</span>\n                                            <span style={{ marginLeft: 20 }}>{I18n.t('user')}: {this.tableSelect(el, { marginTop: -10, marginLeft: 5, verticalAlign: 'middle' })}</span>\n                                        </div>\n                                        {['object', 'state', 'file'].map((element, indexEl) => {\n                                            let newTableHeadArr = [...tableHeadArr].splice(indexEl === 0 ? 0 : 4, indexEl === 0 ? 4 : 5)\n                                            return <Table key={`${indexEl}_mini`} className={classes.table} style={{ width: 'inherit' }} aria-label=\"spanning table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell style={{ background: '#bbbbbb' }} align=\"center\" colSpan={Object.keys(whiteListSettings[el][element]).length}>\n                                                            {I18n.t(['object', 'status', 'file'][indexEl])}</TableCell>\n                                                    </TableRow>\n                                                    <TableRow>\n                                                        {newTableHeadArr.map((elhed, ind) => (<TableCell key={`${elhed}_${ind}_mini`} align=\"center\">\n                                                            {I18n.t(elhed)}</TableCell>))}\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    <TableRow>\n                                                        {Object.keys(whiteListSettings[el][element]).map((attr) =>\n                                                            <TableCell key={`${element}_${attr}_mini_check`} align=\"center\">\n                                                                <CustomCheckbox\n                                                                    table\n                                                                    checked={whiteListSettings[el][element][attr]}\n                                                                    attr={attr}\n                                                                    native={native}\n                                                                    className={classes.checkBoxStyle}\n                                                                    onChange={(e) => {\n                                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\n                                                                        newObj[el][element][attr] = e;\n                                                                        onChange('whiteListSettings', newObj);\n                                                                    }}\n                                                                />\n                                                            </TableCell>)}\n                                                    </TableRow>\n                                                </TableBody>\n                                            </Table>\n                                        })}</div>\n                                })}\n                            </div>\n                        </div>\n                    </TableContainer>\n                </div> : null}\n            </div>\n        </form>;\n    }\n}\n\nWhiteList.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(WhiteList);\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst CustomButtonUpload = ({ title, onChange }) => {\n    const classes = useStyles();\n    const [valueFileUpload, setValueFileUpload] = useState('');\n    return <div className={classes.root}>\n        <input\n            accept=\"image/*\"\n            className={classes.input || ''}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={(e) => {\n                onChange(e.target.files[0] || e.dataTransfer.files[0], name =>\n                    setValueFileUpload(name));\n            }}\n        />\n        <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                {I18n.t(title)}\n            </Button>\n            <TextField style={{ marginLeft: 20 }} value={valueFileUpload} />\n        </label>\n    </div>;\n}\n\nexport default CustomButtonUpload;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport CustomInput from '../Components/CustomInput';\nimport CustomButtonUpload from '../Components/CustomButtonUpload';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Dropzone from 'react-dropzone';\nimport Toast from '../Components/Toast';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    dropZone: {\n        marginTop: 30,\n        width: 600,\n        border: '2px dashed #bbb',\n        borderRadius: 5,\n        padding: 25,\n        textAlign: 'center',\n        fontSize: '20pt',\n        fontWeight: 'bold',\n        fontFamily: 'Arial',\n        color: '#bbb',\n        minWidth: 320,\n        minHeight: 200,\n        transition: 'background 1s',\n        '&:focus': {\n            outline: 'inherit'\n        }\n    },\n    dropZoneActive: {\n        background: '#d6d6d69c'\n    },\n    imgStyle: {\n        maxWidth: 500,\n        maxHeight: 500\n    },\n    '@media screen and (max-width: 680px)': {\n        dropZone: {\n            width: 'calc(100% - 45px)',\n            minWidth: 200,\n        },\n        imgStyle: {\n            width: '100%',\n        }\n    }\n});\n\nclass Background extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgSRC: '',\n            toast: ''\n        };\n    }\n\n    componentDidMount() {\n        this.readFile();\n    }\n\n    readFile() {\n        const { socket, instance } = this.props;\n\n        socket.getRawSocket().emit('readFile', `web.${instance}`, 'login-bg.png', (err, data) => {\n            if (!err && data) {\n                let arrayBufferView = new Uint8Array(data);\n                if (!arrayBufferView.length) {\n                    this.setState({ imgSRC: `../../files/web.${instance}/login-bg.png?ts=` + Date.now() });\n                } else {\n                    let blob = new Blob([arrayBufferView], { type: 'image/png' });\n                    let urlCreator = window.URL || window.webkitURL;\n                    let imgSRC = urlCreator.createObjectURL(blob);\n                    this.setState({ imgSRC });\n                }\n            } else {\n                this.setState({ imgSRC: '' });\n            }\n        });\n    }\n\n    uploadFile(file, callback) {\n        const { socket, instance } = this.props;\n        if (!file) return;\n        if (file.size > 5 * 1024 * 1024) {\n            this.setState({ toast: `File ${file.name} is too big. Maximum 5MB` });\n            this.setState({ imgSRC: '' });\n            callback && callback('');\n            return;\n        }\n        let reader = new FileReader();\n        reader.onload = ({ target: { result } }) => {\n            socket.getRawSocket().emit('writeFile', `web.${instance}`, 'login-bg.png', result, () => {\n                this.readFile();\n            });\n        };\n        callback && callback(file.name);\n        reader.readAsArrayBuffer(file);\n    }\n\n    render() {\n        const { classes, native, onChange } = this.props;\n        const { imgSRC, toast } = this.state;\n        return <form className={classes.tab}>\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomInput\n                        styleComponentBlock={{ height: 20, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                        component={<CustomInput\n                            attr='loginBackgroundColorHelper'\n                            type='color'\n                            style={{ marginTop: -1, marginLeft: 10, minWidth: 60 }}\n                            native={native}\n                            onChange={async (e, value) => {\n                                await onChange('loginBackgroundColorHelper', value);\n                                await onChange('loginBackgroundColor', value);\n                            }}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        />}\n                        title='color'\n                        attr='loginBackgroundColor'\n                        style={{ marginTop: -1, marginBottom: 20 }}\n                        native={native}\n                        onChange={async (e, value) => {\n                            await onChange('loginBackgroundColorHelper', value);\n                            await onChange('loginBackgroundColor', value);\n                        }}\n                    />\n                </div>\n                <div>\n                    <CustomCheckbox\n                        title='background_image'\n                        attr='loginBackgroundImage'\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['loginBackgroundImage'] ? { display: 'block' } : { display: 'none' }}>\n                    <div>\n                        <CustomButtonUpload\n                            title=\"upload_image\"\n                            attr=\"files\"\n                            native={native}\n                            onChange={(e, callback) => this.uploadFile(e, callback)}\n                        />\n                    </div>\n                    <Dropzone\n                        accept=\"image/*\"\n                        onDrop={acceptedFiles => this.uploadFile(acceptedFiles[0])}>\n                        {({ getRootProps, getInputProps, isDragActive }) => (\n                            <section>\n                                <div\n                                    className={`${classes.dropZone} ${isDragActive ? classes.dropZoneActive : null}`}\n                                    {...getRootProps()}>\n                                    <input {...getInputProps()}/>\n                                    <p>{I18n.t('place_the_files_here')}</p>\n                                    {imgSRC ? <img className={classes.imgStyle} src={imgSRC} alt=\"img\" /> : null}\n                                </div>\n                            </section>\n                        )}\n                    </Dropzone>\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nBackground.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)'\n    },\n    fontSize: {\n        '@media screen and (max-width: 460px)': {\n            '& > *': {\n                fontSize: '3.2vw',\n            }\n        }\n    }\n});\n\nclass Additionally extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            ipAddressOptions: []\n        };\n    }\n\n    render() {\n        const { classes, native, onChange } = this.props;\n        return <form className={classes.tab}>\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <h4>\n                {I18n.t('disable_default')}\n                </h4>\n                <p>\n                {I18n.t('warning_incorrectly')}\n                </p>\n                <div>\n                    <CustomCheckbox\n                        title='disable_extensions'\n                        attr='disableExtensions'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='disable_states'\n                        attr='disableStates'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='disable_files'\n                        attr='disableFilesObjects'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nAdditionally.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Additionally);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Options from './Tabs/Options';\nimport Certificates from './Tabs/Certificates';\nimport WhiteList from './Tabs/WhiteList';\nimport Background from './Tabs/Background';\nimport Additionally from './Tabs/Additionally';\nimport Toast from './Components/Toast';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nconst arrayTabName = [{\n    name: 'options',\n    translate: 'main_settings',\n    index: 0\n}, {\n    name: 'certificates',\n    translate: 'certificates',\n    index: 1\n}, {\n    name: 'whiteList',\n    translate: 'whiteList',\n    index: 2\n}, {\n    name: 'additionally',\n    translate: 'additionally',\n    index: 3\n}, {\n    name: 'background',\n    translate: 'background',\n    index: 4\n}]\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = { ...props };\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        super(props, extendedProps);\n    }\n\n    getSelectedTab() {\n        const { selectedTab } = this.state;\n        const tab = selectedTab;\n        if (tab) {\n            return arrayTabName.find((el) => el.name === tab)?.index || 0;\n        } else {\n            return 0;\n        }\n    }\n\n    onPrepareSave(settings) {\n        super.onPrepareSave(settings);\n        const { secure, certPublic, certPrivate } = this.state.native;\n        if (secure && (!certPrivate || !certPublic)) {\n            this.setState({ toast: 'set_certificates' });\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    renderTab() {\n        const { selectedTab, native } = this.state;\n        switch (selectedTab) {\n            case 'certificates':\n                return <Certificates\n                    key=\"certificates\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'whiteList':\n                return <WhiteList\n                    key=\"whiteList\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'background':\n                return <Background\n                    key=\"background\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'additionally':\n                return <Additionally\n                    key=\"additionally\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'options':\n            default:\n                return <Options\n                    key=\"options\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    adapterName={this.adapterName}\n                />;\n        }\n    }\n\n    checkDisabledTabs(nameTab) {\n        const { native } = this.state;\n        return (!native['auth'] && nameTab === 'background') || (!native['secure'] && nameTab === 'certificates');\n    }\n\n    render() {\n        const { loaded, theme, themeType, toast } = this.state;\n        const { classes } = this.props;\n        if (!loaded) {\n            return <MuiThemeProvider theme={theme}>\n                <Loader theme={themeType} />\n            </MuiThemeProvider>\n        }\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n                <div className=\"App\" style={{ background: theme.palette.background.default, color: theme.palette.text.primary }}>\n                    <AppBar position=\"static\">\n                        <Tabs value={this.getSelectedTab()} onChange={(e, index) => {\n                            this.selectTab(arrayTabName.find((el) => el.index === index)?.name || arrayTabName[0].name, index)\n                        }} scrollButtons=\"auto\">\n                            {arrayTabName.map((el, index) => (<Tab key={`${index}-tab-key`} disabled={this.checkDisabledTabs(el.name)} label={I18n.t(el.translate)} data-name={el.name} />))}\n                        </Tabs>\n                    </AppBar>\n                    <div className={this.isIFrame ? classes.tabContentIFrame : classes.tabContent}>\n                        {this.renderTab()}\n                    </div>\n                    {this.renderError()}\n                    {this.renderSaveCloseButtons()}\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {version} from '../package.json';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nwindow.adapterName = 'web';\nlet themeName = Utils.getThemeName();\n\n\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\n\nfunction build() {\n    return ReactDOM.render(\n        <MuiThemeProvider theme={theme(themeName)}>\n            <App\n                onThemeChange={_theme => {\n                    themeName = _theme;\n                    build();\n                }}\n            />\n        </MuiThemeProvider>,\n        document.getElementById('root')\n    );\n}\n\nif (window.location.host !== 'localhost:3000') {\n    Sentry.init({\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\n        release: 'iobroker.' + window.adapterName + '@' + version,\n        integrations: [\n            new SentryIntegrations.Dedupe()\n        ]\n    });\n}\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}